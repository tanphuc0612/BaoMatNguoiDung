-- tao user quan tri voi cac quyen (thieu quyen nao thi them vao
alter session set "_ORACLE_SCRIPT"=true;
/
declare userexist integer;
begin
  select count(*) into userexist from dba_users where username='QT';
  if (userexist = 1) then
    execute immediate 'drop user QT CASCADE';
  end if;
end;
/
CREATE USER QT IDENTIFIED BY 1;
GRANT CREATE SESSION TO QT WITH ADMIN OPTION;
declare is_role_existed integer;
begin
  SELECT count(*) INTO is_role_existed FROM DBA_ROLES where role='QUANTRI';
  if (is_role_existed = 1) then
    execute immediate 'drop role QUANTRI';
  end if;
end;
/
CREATE ROLE QUANTRI;
CREATE OR REPLACE VIEW THONGTINROLE
AS
SELECT GRANTED_ROLE FROM DBA_ROLE_PRIVS WHERE GRANTEE = SYS_CONTEXT ('USERENV', 'SESSION_USER');
/
GRANT SELECT ON THONGTINROLE TO QUANTRI;
GRANT SELECT ON DBA_USERS TO QUANTRI;
GRANT SELECT ON DBA_ROLES TO QUANTRI;
GRANT SELECT ON DBA_VIEWS TO QUANTRI;
GRANT SELECT ON DBA_POLICIES TO QUANTRI;
GRANT SELECT ON DBA_ROLE_PRIVS TO QUANTRI;
GRANT SELECT ON DBA_SYS_PRIVS TO QUANTRI;
GRANT SELECT ON DBA_TAB_PRIVS TO QUANTRI;
GRANT SELECT ON DBA_COL_PRIVS TO QUANTRI;
GRANT SELECT ON ROLE_ROLE_PRIVS TO QUANTRI;
GRANT SELECT ON ROLE_SYS_PRIVS TO QUANTRI;
GRANT SELECT ON ROLE_TAB_PRIVS TO QUANTRI;
--cho phep quantri toan quyen tren table
GRANT CREATE TABLE TO QUANTRI;
GRANT CREATE SEQUENCE TO QUANTRI;
GRANT UNLIMITED TABLESPACE TO QT;
--cho phep quantri tao view
GRANT CREATE ANY VIEW TO QT;
--cho phep quantri tao procedure
GRANT CREATE ANY PROCEDURE TO QUANTRI;
GRANT EXECUTE ANY PROCEDURE TO QUANTRI;
-- cho phep quantri tao,xoa,sua user
GRANT CREATE USER TO QUANTRI;
GRANT ALTER USER TO QUANTRI;
GRANT DROP USER TO QUANTRI;
-- cho phep quantri tao,xoa,sua role
GRANT CREATE ROLE TO QUANTRI;
GRANT DROP ANY ROLE TO QUANTRI;
GRANT ALTER ANY ROLE TO QUANTRI;
-- cho phep quantri thuc hien ma hoa
GRANT EXECUTE ON SYS.DBMS_CRYPTO TO QUANTRI;
-- cho phep quan tri tao procedure va trigger
GRANT CREATE PROCEDURE TO QUANTRI;
GRANT CREATE ANY TRIGGER TO QUANTRI;
-- cho phep quan tri thuc hien co che VPD 
GRANT EXECUTE ON SYS.DBMS_RLS TO QUANTRI;
GRANT QUANTRI TO QT;

--tao user/role proc
create or replace PROCEDURE CreateUser( V_USERNAME VARCHAR2, V_PASSWORD VARCHAR2)
AS
BEGIN
    EXECUTE IMMEDIATE 'ALTER SESSION SET "_ORACLE_SCRIPT"=TRUE';
    EXECUTE IMMEDIATE 'CREATE USER '||V_USERNAME||' IDENTIFIED BY '||V_PASSWORD;
    EXECUTE IMMEDIATE 'GRANT CREATE SESSION TO '|| V_USERNAME;
END;
/

create or replace PROCEDURE GrantRole(V_USERNAME VARCHAR2, V_ROLE VARCHAR2)
AS
BEGIN
    EXECUTE IMMEDIATE 'GRANT '||V_ROLE||' TO '||V_USERNAME;
END;
/
create or replace PROCEDURE RevokeRole(V_USERNAME VARCHAR2, V_ROLE VARCHAR2)
AS
BEGIN
    EXECUTE IMMEDIATE 'REVOKE '||V_ROLE||' FROM '||V_USERNAME;
END;
/
create or replace PROCEDURE CreateRole(V_ROLE VARCHAR2)
AS
BEGIN
    EXECUTE IMMEDIATE 'ALTER SESSION SET "_ORACLE_SCRIPT"=TRUE';
    EXECUTE IMMEDIATE 'CREATE ROLE '||V_ROLE;
END;
/
create or replace PROCEDURE DropRole(V_ROLE VARCHAR2)
AS
BEGIN
    EXECUTE IMMEDIATE 'ALTER SESSION SET "_ORACLE_SCRIPT"=TRUE';
    EXECUTE IMMEDIATE 'DROP ROLE '||V_ROLE;
END;
/

GRANT EXECUTE ON CreateUser to QT;
GRANT EXECUTE ON GrantRole to QT;
GRANT EXECUTE ON RevokeRole to QT;
GRANT EXECUTE ON CreateRole to QT;
GRANT EXECUTE ON DropRole to QT;

-- connect tai khoan quan tri tao bang, tao user
connect QT/1;
CREATE TABLE DONVI(
    MaDV NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL,
    TenDV VARCHAR2(100),
    CONSTRAINT DONVI_PK PRIMARY KEY (MaDV)
);
CREATE TABLE THANHVIEN(
    MaTV NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL,
    Ten VARCHAR2(100) NOT NULL,
    Phai VARCHAR(3),
    QueQuan VARCHAR2(100),
    NgaySinh DATE,
    QuocTich VARCHAR2(10),
    DCThuongTru VARCHAR2(100),
    DCTamTru VARCHAR2(100),
    NoiCongTac VARCHAR2(100),
    TrangThai NUMBER(1),        -- 0: Tam nghi; 1: Cong tac tai cho; 2: Cong tac xa
    LyDo VARCHAR2(100),
    MaDV NUMBER(1),
    Username VARCHAR2(100),
    DuocBau NUMBER(1), -- 0: khong duoc; 1: duoc bau
    CONSTRAINT THANHVIEN_PK PRIMARY KEY (MaTV),
    CONSTRAINT THANHVIEN_DONVI_FK FOREIGN KEY (MaDV) REFERENCES DONVI(MaDV)
);
CREATE TABLE UNGCUVIEN(
    MaUCV NUMBER(3) NOT NULL,
    HoTen VARCHAR2(100),
    Phai VARCHAR2(3),
    NgaySinh DATE,
    CONSTRAINT UNGCUVIEN_PK PRIMARY KEY (MaUCV),
    CONSTRAINT UNGCUVIEN_THANHVIEN_FK FOREIGN KEY (MaUCV) REFERENCES THANHVIEN(MaTV)
);
CREATE TABLE BANTOCHUC(
    MaBTC NUMBER(3)NOT NULL,
    HoTen VARCHAR2(100),
    Phai VARCHAR2(3),
    NgaySinh DATE,
    CONSTRAINT BANTOCHUC_PK PRIMARY KEY (MaBTC),
    CONSTRAINT BANTOCHUC_THANHVIEN_FK FOREIGN KEY (MaBTC) REFERENCES THANHVIEN(MaTV)
);
CREATE TABLE TOLAPDANHSACH(
    MaLDS NUMBER(3)NOT NULL,
    HoTen VARCHAR2(100),
    Phai VARCHAR2(3),
    NgaySinh DATE,
    MaDV NUMBER(1),
    Username VARCHAR2(100),
    CONSTRAINT TOLAPDANHSACH_PK PRIMARY KEY (MaLDS),
    CONSTRAINT TOLAPDANHSACH_THANHVIEN_FK FOREIGN KEY (MaLDS) REFERENCES THANHVIEN(MaTV),
    CONSTRAINT TOLAPDANHSACH_DONVI_FK FOREIGN KEY (MaDV) REFERENCES DONVI(MaDV)
);
CREATE TABLE TOTHEODOI(
    MaTTD NUMBER(3)NOT NULL,
    HoTen VARCHAR2(100),
    Phai VARCHAR2(3),
    NgaySinh DATE,
    CONSTRAINT TOTHEODOI_PK PRIMARY KEY (MaTTD),
    CONSTRAINT TOTHEODOI_THANHVIEN_FK FOREIGN KEY (MaTTD) REFERENCES THANHVIEN(MaTV)
);
CREATE TABLE TOGIAMSAT(
    MaTGS NUMBER(3)NOT NULL,
    HoTen VARCHAR2(100),
    Phai VARCHAR2(3),
    NgaySinh DATE,
    CONSTRAINT TOGIAMSAT_PK PRIMARY KEY (MaTGS),
    CONSTRAINT TOGIAMSAT_THANHVIEN_FK FOREIGN KEY (MaTGS) REFERENCES THANHVIEN(MaTV)
);
CREATE TABLE LICHSUBAU(
    idLSB NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL,
    MaTV NUMBER(3) NOT NULL,
    MaUCV NUMBER(3) NOT NULL,
    NgayGio DATE,
    CONSTRAINT LICHSUBAU_PK PRIMARY KEY (idLSB),
    CONSTRAINT LICHSUBAUTV_TV_FK FOREIGN KEY (MaTV) REFERENCES THANHVIEN(MaTV),
    CONSTRAINT LICHSUBAUUCV_UCV_FK FOREIGN KEY (MaUCV) REFERENCES UNGCUVIEN(MaUCV)
);

CREATE TABLE LANBAUCUOI(
    idLBC NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL,
    MaTV NUMBER(3) NOT NULL,
    MaUCV NUMBER(3),
    CONSTRAINT LANBAUCUOI_PK PRIMARY KEY (idLBC)
);

-- Tao ham ma hoa va giai ma, trigger khi insert thanhvien
CREATE OR REPLACE FUNCTION QT.F_ENCRYPT_thanhvien_username (v_iv VARCHAR2,v_key VARCHAR2, username_raw VARCHAR2)
    RETURN VARCHAR2
AS
   v_username          RAW (2000);
   v_encryption_type   PLS_INTEGER  :=  DBMS_CRYPTO.DES_CBC_PKCS5;
BEGIN

   v_username :=
      DBMS_CRYPTO.encrypt (src   => UTL_I18N.STRING_TO_RAW (username_raw, 'AL32UTF8'),
                           typ   => v_encryption_type,
                           key   => UTL_I18N.STRING_TO_RAW (v_key, 'AL32UTF8'),
                           iv    => UTL_I18N.STRING_TO_RAW (v_iv, 'AL32UTF8'));
    
    RETURN v_username;
END;
/

CREATE OR REPLACE FUNCTION  QT.F_DECRYPT_thanhvien_username (v_MaTV VARCHAR2)
    RETURN VARCHAR2
AS
   v_username          RAW (2000);
   username_raw        RAW (2000);
   v_encryption_type   PLS_INTEGER  :=  DBMS_CRYPTO.DES_CBC_PKCS5;
   v_iv                VARCHAR2 (100);
   v_key               VARCHAR2 (100);
BEGIN

    SELECT TO_CHAR(ten)
        INTO v_iv
        FROM QT.THANHVIEN
        WHERE MATV=v_MaTV;
        
    SELECT TO_CHAR(ngaysinh)
        INTO v_key
        FROM QT.THANHVIEN
        WHERE MATV=v_MaTV;
    
    SELECT username
        INTO v_username
        FROM QT.THANHVIEN
        WHERE MATV=v_MaTV;

   username_raw :=
      DBMS_CRYPTO.decrypt (src   => v_username,
                           typ   => v_encryption_type,
                           key   => UTL_I18N.STRING_TO_RAW (v_key, 'AL32UTF8'),
                           iv    => UTL_I18N.STRING_TO_RAW (v_iv, 'AL32UTF8'));
    
    RETURN UTL_RAW.CAST_TO_VARCHAR2(username_raw);
END;
/
CREATE OR REPLACE FUNCTION  QT.F_DECRYPT_tolapdanhsach_username (v_MaTV VARCHAR2)
    RETURN VARCHAR2
AS
   v_username          RAW (2000);
   username_raw        RAW (2000);
   v_encryption_type   PLS_INTEGER  :=  DBMS_CRYPTO.DES_CBC_PKCS5;
   v_iv                VARCHAR2 (100);
   v_key               VARCHAR2 (100);
BEGIN

    SELECT TO_CHAR(hoten)
        INTO v_iv
        FROM QT.TOLAPDANHSACH
        WHERE MALDS=v_MaTV;
        
    SELECT TO_CHAR(ngaysinh)
        INTO v_key
        FROM QT.TOLAPDANHSACH
        WHERE MALDS=v_MaTV;
    
    SELECT username
        INTO v_username
        FROM QT.TOLAPDANHSACH
        WHERE MALDS=v_MaTV;

   username_raw :=
      DBMS_CRYPTO.decrypt (src   => v_username,
                           typ   => v_encryption_type,
                           key   => UTL_I18N.STRING_TO_RAW (v_key, 'AL32UTF8'),
                           iv    => UTL_I18N.STRING_TO_RAW (v_iv, 'AL32UTF8'));
    
    RETURN UTL_RAW.CAST_TO_VARCHAR2(username_raw);
END;
/

CREATE OR REPLACE TRIGGER QT.T_INSERT_ENCRYPT_thanhvien_username
BEFORE INSERT ON QT.THANHVIEN 
FOR EACH ROW
BEGIN
    :NEW.USERNAME := QT.F_ENCRYPT_thanhvien_username (:NEW.TEN, :NEW.NGAYSINH, :NEW.USERNAME);
END;
/
CREATE OR REPLACE TRIGGER QT.T_INSERT_ENCRYPT_tolapdanhsach_username
BEFORE INSERT ON QT.TOLAPDANHSACH
FOR EACH ROW
BEGIN
    :NEW.USERNAME := QT.F_ENCRYPT_thanhvien_username (:NEW.HOTEN, :NEW.NGAYSINH, :NEW.USERNAME);
END;
/
----------------------------------------------------

--INSERT DU LIEU
INSERT INTO DONVI VALUES(1,'Don vi A');
INSERT INTO DONVI VALUES(2,'Don vi B');
INSERT INTO DONVI VALUES(3,'Don vi C');

INSERT INTO THANHVIEN(MaTV, Ten, Phai, QueQuan, NgaySinh, QuocTich,dcthuongtru,DCTamTru,NoiCongTac, TrangThai, LyDo, MaDV, Username,DuocBau) 
VALUES (null, 'Nguyen Doan Tan Phuc', 'Nam','Ben Tre', TO_DATE('2/1/1999','DD/MM/YYYY'),'VietNam','Binh Duong','Binh Duong','BinhPhuoc', 1,null,1,'TV1',1); -- BTC
INSERT INTO THANHVIEN(MaTV, Ten, Phai, QueQuan, NgaySinh, QuocTich,dcthuongtru,DCTamTru,NoiCongTac, TrangThai, LyDo,MaDV, Username,DuocBau) 
VALUES (null, 'Lai Gia Phu', 'Nam','Binh Thuan', TO_DATE('26/7/1999','DD/MM/YYYY'),'VietNam','Binh Duong','Binh Duong','BinhPhuoc', 1,null,1,'TV2',1); -- NDB
INSERT INTO THANHVIEN(MaTV, Ten, Phai, QueQuan, NgaySinh, QuocTich,dcthuongtru,DCTamTru,NoiCongTac, TrangThai, LyDo, MaDV, Username,DuocBau) 
VALUES (null, 'Nguyen Thi Cam My', 'Nu','Binh Duong', TO_DATE('3/3/1999','DD/MM/YYYY'),'VietNam','Binh Duong','Binh Duong','BinhPhuoc', 1,null,1,'TV3',1); --LDS don vi 1
INSERT INTO THANHVIEN(MaTV, Ten, Phai, QueQuan, NgaySinh, QuocTich,dcthuongtru,DCTamTru,NoiCongTac, TrangThai, LyDo,MaDV, Username,DuocBau) 
VALUES (null, 'Nguyen Thanh Dat', 'Nam','Ninh Binh', TO_DATE('1/7/1999','DD/MM/YYYY'),'VietNam','Binh Duong','Binh Duong','BinhPhuoc', 1,null,2,'TV4',1);--LDS don vi 2
INSERT INTO THANHVIEN(MaTV, Ten, Phai, QueQuan, NgaySinh, QuocTich,dcthuongtru,DCTamTru,NoiCongTac, TrangThai, LyDo, MaDV, Username,DuocBau) 
VALUES (null, 'Doan Nguyen Tan Phuc', 'Nam','Quang Binh', TO_DATE('4/9/1999','DD/MM/YYYY'),'VietNam','Binh Duong','Binh Duong','BinhPhuoc', 0,'Bi benh',2,'TV5',1); --tam nghi
INSERT INTO THANHVIEN(MaTV, Ten, Phai, QueQuan, NgaySinh, QuocTich,dcthuongtru,DCTamTru,NoiCongTac, TrangThai, LyDo,MaDV, Username,DuocBau) 
VALUES (null, 'Luu Dang Ky Quan', 'Nam','Dong Nai', TO_DATE('30/8/1999','DD/MM/YYYY'),'VietNam','Ha Noi','Ha Noi','Ha Noi', 1,null,2,'TV6',1); -- TDKQ
INSERT INTO THANHVIEN(MaTV, Ten, Phai, QueQuan, NgaySinh, QuocTich,dcthuongtru,DCTamTru,NoiCongTac, TrangThai, LyDo,MaDV, Username,DuocBau) 
VALUES (null, 'Nguyen Thi Kieu Oanh', 'Nu','Thai Binh', TO_DATE('21/2/1999','DD/MM/YYYY'),'VietNam','Binh Duong','Binh Duong','BinhPhuoc', 1,null,1,'TV7',1); -- TGS
INSERT INTO THANHVIEN(MaTV, Ten, Phai, QueQuan, NgaySinh, QuocTich,dcthuongtru,DCTamTru,NoiCongTac, TrangThai, LyDo, MaDV, Username,DuocBau) 
VALUES (null, 'Pham Linh Chi', 'Nu','Nha Trang', TO_DATE('22/2/1999','DD/MM/YYYY'),'VietNam','Binh Duong','Binh Duong','BinhPhuoc', 1,null,1,'TV8',1); -- UCV
INSERT INTO THANHVIEN(MaTV, Ten, Phai, QueQuan, NgaySinh, QuocTich,dcthuongtru,DCTamTru,NoiCongTac, TrangThai, LyDo, MaDV, Username,DuocBau) 
VALUES (null, 'Nguyen Thi Minh Anh', 'Nu','TPCHM', TO_DATE('28/10/1999','DD/MM/YYYY'),'VietNam','Ha Noi','Ha Noi','Ha Noi', 2,null,1,'TV9',1); --UCV
INSERT INTO THANHVIEN(MaTV, Ten, Phai, QueQuan, NgaySinh, QuocTich,dcthuongtru,DCTamTru,NoiCongTac, TrangThai, LyDo, MaDV, Username,DuocBau) 
VALUES (null, 'Le Huynh Long', 'Nam','TPCHM', TO_DATE('15/6/1999','DD/MM/YYYY'),'VietNam','Ha Noi','Ha Noi','Ha Noi', 2,null,2,'TV10',1); -- BTC
INSERT INTO THANHVIEN(MaTV, Ten, Phai, QueQuan, NgaySinh, QuocTich,dcthuongtru,DCTamTru,NoiCongTac, TrangThai, LyDo, MaDV, Username,DuocBau) 
VALUES (null, 'Bui Khong Thien', 'Nam','TPCHM', TO_DATE('22/2/1999','DD/MM/YYYY'),'America','Binh Duong','Binh Duong','BinhPhuoc', 1,null,2,'TV11',1);-- TGS
INSERT INTO THANHVIEN(MaTV, Ten, Phai, QueQuan, NgaySinh, QuocTich,dcthuongtru,DCTamTru,NoiCongTac, TrangThai, LyDo, MaDV, Username,DuocBau) 
VALUES (null, 'Truong Viet Nga', 'Nu','Quang Nam', TO_DATE('12/11/1999','DD/MM/YYYY'),'VietNam','Binh Duong','Binh Duong','BinhPhuoc', 1,null,2,'TV12',1);-- UCV
INSERT INTO THANHVIEN(MaTV, Ten, Phai, QueQuan, NgaySinh, QuocTich,dcthuongtru,DCTamTru,NoiCongTac, TrangThai, LyDo, MaDV, Username,DuocBau) 
VALUES (null, 'Mai Hong Ngoc', 'Nu','Hue', TO_DATE('15/10/1999','DD/MM/YYYY'),'VietNam','Binh Duong','Binh Duong','BinhPhuoc', 0,'Duong benh',3,'TV13',1); --TDKQ
INSERT INTO THANHVIEN(MaTV, Ten, Phai, QueQuan, NgaySinh, QuocTich,dcthuongtru,DCTamTru,NoiCongTac, TrangThai, LyDo, MaDV, Username,DuocBau) 
VALUES (null, 'Le Huynh Thang', 'Nam','Dak Lak', TO_DATE('11/5/1999','DD/MM/YYYY'),'VietNam','Binh Duong','Binh Duong','BinhPhuoc', 1,null,3,'TV14',1); --LDS don vi 3
INSERT INTO THANHVIEN(MaTV, Ten, Phai, QueQuan, NgaySinh, QuocTich,dcthuongtru,DCTamTru,NoiCongTac, TrangThai, LyDo, MaDV, Username,DuocBau) 
VALUES (null, 'Vu Quoc Khoi', 'Nam','Tay Nguyen', TO_DATE('28/1/1999','DD/MM/YYYY'),'VietNam','Binh Duong','Binh Duong','BinhPhuoc', 1,null,3,'TV15',1); --UCV
INSERT INTO THANHVIEN(MaTV, Ten, Phai, QueQuan, NgaySinh, QuocTich,dcthuongtru,DCTamTru,NoiCongTac, TrangThai, LyDo, MaDV, Username,DuocBau) 
VALUES (null, 'Nguyen Quoc Cuong', 'Nam','Ca Mau', TO_DATE('3/4/1999','DD/MM/YYYY'),'VietNam','Binh Duong','Binh Duong','BinhPhuoc', 1,null,3,'TV16',1); --UCV
INSERT INTO THANHVIEN(MaTV, Ten, Phai, QueQuan, NgaySinh, QuocTich,dcthuongtru,DCTamTru,NoiCongTac, TrangThai, LyDo, MaDV, Username,DuocBau) 
VALUES (null, 'Tran Thao Quynh', 'Nu','Hai Duong', TO_DATE('16/7/1999','DD/MM/YYYY'),'Australia','Ha Noi','Ha Noi','Ha Noi', 2,null,2,null,1); --chua co user
INSERT INTO THANHVIEN(MaTV, Ten, Phai, QueQuan, NgaySinh, QuocTich,dcthuongtru,DCTamTru,NoiCongTac, TrangThai, LyDo, MaDV, Username,DuocBau) 
VALUES (null, 'Vuong Ha My', 'Nu','Ha Noi', TO_DATE('12/6/1999','DD/MM/YYYY'),'VietNam','Binh Duong','Binh Duong','BinhPhuoc', 1,null,2,null,1); --chua co user

INSERT INTO BANTOCHUC VALUES(1,'Nguyen Doan Tan Phuc', 'Nam', TO_DATE('2/1/1999','DD/MM/YYYY'));
INSERT INTO BANTOCHUC VALUES(10,'Le Huynh Long', 'Nam', TO_DATE('15/6/1999','DD/MM/YYYY'));

INSERT INTO UNGCUVIEN VALUES(8,'Pham Linh Chi', 'Nu', TO_DATE('22/2/1999','DD/MM/YYYY'));
INSERT INTO UNGCUVIEN VALUES(9,'Nguyen Thi Minh Anh', 'Nu', TO_DATE('28/10/1999','DD/MM/YYYY'));
INSERT INTO UNGCUVIEN VALUES(12,'Truong Viet Nga', 'Nu', TO_DATE('12/11/1999','DD/MM/YYYY'));
INSERT INTO UNGCUVIEN VALUES(15,'Vu Quoc Khoi', 'Nam', TO_DATE('28/1/1999','DD/MM/YYYY'));
INSERT INTO UNGCUVIEN VALUES(16,'Nguyen Quoc Cuong', 'Nam', TO_DATE('3/4/1999','DD/MM/YYYY'));

INSERT INTO TOGIAMSAT VALUES(7,'Nguyen Thi Kieu Oanh', 'Nu', TO_DATE('21/2/1999','DD/MM/YYYY'));
INSERT INTO TOGIAMSAT VALUES(11,'Bui Khong Thien', 'Nam', TO_DATE('22/2/1999','DD/MM/YYYY'));

INSERT INTO TOLAPDANHSACH VALUES(3,'Nguyen Thi Cam My','Nu', TO_DATE('3/3/1999','DD/MM/YYYY'),1,'TV3');
INSERT INTO TOLAPDANHSACH VALUES(4,'Nguyen Thanh Dat','Nam', TO_DATE('1/7/1999','DD/MM/YYYY'),2,'TV4');
INSERT INTO TOLAPDANHSACH VALUES(14,'Le Huynh Long', 'Nam', TO_DATE('15/6/1999','DD/MM/YYYY'),3,'TV4');

INSERT INTO TOTHEODOI VALUES(6,'Luu Dang Ky Quan', 'Nam', TO_DATE('30/8/1999','DD/MM/YYYY'));
INSERT INTO TOTHEODOI VALUES(13,'Mai Hong Ngoc', 'Nu', TO_DATE('15/10/1999','DD/MM/YYYY'));
-- ucv : 8,9,12,15,16
INSERT INTO LICHSUBAU VALUES(null,1,8,TO_DATE('20/8/2020','DD/MM/YYYY'));
INSERT INTO LICHSUBAU VALUES(null,1,9,TO_DATE('20/8/2020','DD/MM/YYYY'));
INSERT INTO LICHSUBAU VALUES(null,1,12,TO_DATE('20/8/2020','DD/MM/YYYY'));
INSERT INTO LICHSUBAU VALUES(null,2,12,TO_DATE('20/8/2020','DD/MM/YYYY'));
INSERT INTO LICHSUBAU VALUES(null,2,15,TO_DATE('20/8/2020','DD/MM/YYYY'));
INSERT INTO LICHSUBAU VALUES(null,2,9,TO_DATE('20/8/2020','DD/MM/YYYY'));
INSERT INTO LICHSUBAU VALUES(null,3,8,TO_DATE('20/8/2020','DD/MM/YYYY'));
INSERT INTO LICHSUBAU VALUES(null,3,15,TO_DATE('20/8/2020','DD/MM/YYYY'));
INSERT INTO LICHSUBAU VALUES(null,3,12,TO_DATE('20/8/2020','DD/MM/YYYY'));
INSERT INTO LICHSUBAU VALUES(null,4,16,TO_DATE('20/8/2020','DD/MM/YYYY'));
INSERT INTO LICHSUBAU VALUES(null,4,12,TO_DATE('20/8/2020','DD/MM/YYYY'));
INSERT INTO LICHSUBAU VALUES(null,4,9,TO_DATE('20/8/2020','DD/MM/YYYY'));
INSERT INTO LICHSUBAU VALUES(null,6,16,TO_DATE('20/8/2020','DD/MM/YYYY'));
INSERT INTO LICHSUBAU VALUES(null,6,12,TO_DATE('20/8/2020','DD/MM/YYYY'));
INSERT INTO LICHSUBAU VALUES(null,7,9,TO_DATE('20/8/2020','DD/MM/YYYY'));
INSERT INTO LICHSUBAU VALUES(null,7,8,TO_DATE('20/8/2020','DD/MM/YYYY'));
INSERT INTO LICHSUBAU VALUES(null,8,9,TO_DATE('20/8/2020','DD/MM/YYYY'));
INSERT INTO LICHSUBAU VALUES(null,8,8,TO_DATE('20/8/2020','DD/MM/YYYY'));
INSERT INTO LICHSUBAU VALUES(null,8,15,TO_DATE('20/8/2020','DD/MM/YYYY'));
INSERT INTO LICHSUBAU VALUES(null,8,12,TO_DATE('20/8/2020','DD/MM/YYYY'));
INSERT INTO LICHSUBAU VALUES(null,8,9,TO_DATE('21/8/2020','DD/MM/YYYY'));
INSERT INTO LICHSUBAU VALUES(null,8,8,TO_DATE('21/8/2020','DD/MM/YYYY'));
INSERT INTO LICHSUBAU VALUES(null,8,15,TO_DATE('21/8/2020','DD/MM/YYYY'));

INSERT INTO LANBAUCUOI VALUES(null,1,8);
INSERT INTO LANBAUCUOI VALUES(null,1,9);
INSERT INTO LANBAUCUOI VALUES(null,1,12);
INSERT INTO LANBAUCUOI VALUES(null,2,12);
INSERT INTO LANBAUCUOI VALUES(null,2,15);
INSERT INTO LANBAUCUOI VALUES(null,2,9);
INSERT INTO LANBAUCUOI VALUES(null,3,8);
INSERT INTO LANBAUCUOI VALUES(null,3,15);
INSERT INTO LANBAUCUOI VALUES(null,3,12);
INSERT INTO LANBAUCUOI VALUES(null,4,16);
INSERT INTO LANBAUCUOI VALUES(null,4,12);
INSERT INTO LANBAUCUOI VALUES(null,4,9);
INSERT INTO LANBAUCUOI VALUES(null,6,16);
INSERT INTO LANBAUCUOI VALUES(null,6,12);
INSERT INTO LANBAUCUOI VALUES(null,7,9);
INSERT INTO LANBAUCUOI VALUES(null,7,8);
INSERT INTO LANBAUCUOI VALUES(null,8,9);
INSERT INTO LANBAUCUOI VALUES(null,8,8);
INSERT INTO LANBAUCUOI VALUES(null,8,15);

alter session set "_ORACLE_SCRIPT"=true;
--TAO ROLE va USERS
declare
user_exist integer;
begin
  select count(*) into user_exist from dba_users where username=UPPER('TV1');
  if (user_exist = 1) then
    execute immediate 'drop user TV1';
  end if;
end;
/
declare
user_exist integer;
begin
  select count(*) into user_exist from dba_users where username=UPPER('TV2');
  if (user_exist = 1) then
    execute immediate 'drop user TV2';
  end if;
end;
/
declare
user_exist integer;
begin
  select count(*) into user_exist from dba_users where username=UPPER('TV3');
  if (user_exist = 1) then
    execute immediate 'drop user TV3';
  end if;
end;
/
declare
user_exist integer;
begin
  select count(*) into user_exist from dba_users where username=UPPER('TV4');
  if (user_exist = 1) then
    execute immediate 'drop user TV4';
  end if;
end;
/
declare
user_exist integer;
begin
  select count(*) into user_exist from dba_users where username=UPPER('TV5');
  if (user_exist = 1) then
    execute immediate 'drop user TV5';
  end if;
end;
/
declare
user_exist integer;
begin
  select count(*) into user_exist from dba_users where username=UPPER('TV6');
  if (user_exist = 1) then
    execute immediate 'drop user TV6';
  end if;
end;
/
declare
user_exist integer;
begin
  select count(*) into user_exist from dba_users where username=UPPER('TV7');
  if (user_exist = 1) then
    execute immediate 'drop user TV7';
  end if;
end;
/
declare
user_exist integer;
begin
  select count(*) into user_exist from dba_users where username=UPPER('TV8');
  if (user_exist = 1) then
    execute immediate 'drop user TV8';
  end if;
end;
/
declare
user_exist integer;
begin
  select count(*) into user_exist from dba_users where username=UPPER('TV9');
  if (user_exist = 1) then
    execute immediate 'drop user TV9';
  end if;
end;
/
declare
user_exist integer;
begin
  select count(*) into user_exist from dba_users where username=UPPER('TV10');
  if (user_exist = 1) then
    execute immediate 'drop user TV10';
  end if;
end;
/
declare
user_exist integer;
begin
  select count(*) into user_exist from dba_users where username=UPPER('TV11');
  if (user_exist = 1) then
    execute immediate 'drop user TV11';
  end if;
end;
/
declare
user_exist integer;
begin
  select count(*) into user_exist from dba_users where username=UPPER('TV12');
  if (user_exist = 1) then
    execute immediate 'drop user TV12';
  end if;
end;
/
declare
user_exist integer;
begin
  select count(*) into user_exist from dba_users where username=UPPER('TV13');
  if (user_exist = 1) then
    execute immediate 'drop user TV13';
  end if;
end;
/
declare
user_exist integer;
begin
  select count(*) into user_exist from dba_users where username=UPPER('TV14');
  if (user_exist = 1) then
    execute immediate 'drop user TV14';
  end if;
end;
/
declare
user_exist integer;
begin
  select count(*) into user_exist from dba_users where username=UPPER('TV15');
  if (user_exist = 1) then
    execute immediate 'drop user TV15';
  end if;
end;
/
declare
user_exist integer;
begin
  select count(*) into user_exist from dba_users where username=UPPER('TV16');
  if (user_exist = 1) then
    execute immediate 'drop user TV16';
  end if;
end;
/
CREATE USER TV1 IDENTIFIED BY 1;
GRANT CREATE SESSION TO TV1;
CREATE USER TV2 IDENTIFIED BY 1;
GRANT CREATE SESSION TO TV2;
CREATE USER TV3 IDENTIFIED BY 1;
GRANT CREATE SESSION TO TV3;
CREATE USER TV4 IDENTIFIED BY 1;
GRANT CREATE SESSION TO TV4;
CREATE USER TV5 IDENTIFIED BY 1;
GRANT CREATE SESSION TO TV5;
CREATE USER TV6 IDENTIFIED BY 1;
GRANT CREATE SESSION TO TV6;
CREATE USER TV7 IDENTIFIED BY 1;
GRANT CREATE SESSION TO TV7;
CREATE USER TV8 IDENTIFIED BY 1;
GRANT CREATE SESSION TO TV8;
CREATE USER TV9 IDENTIFIED BY 1;
GRANT CREATE SESSION TO TV9;
CREATE USER TV10 IDENTIFIED BY 1;
GRANT CREATE SESSION TO TV10;
CREATE USER TV11 IDENTIFIED BY 1;
GRANT CREATE SESSION TO TV11;
CREATE USER TV12 IDENTIFIED BY 1;
GRANT CREATE SESSION TO TV12;
CREATE USER TV13 IDENTIFIED BY 1;
GRANT CREATE SESSION TO TV13;
CREATE USER TV14 IDENTIFIED BY 1;
GRANT CREATE SESSION TO TV14;
CREATE USER TV15 IDENTIFIED BY 1;
GRANT CREATE SESSION TO TV15;
CREATE USER TV16 IDENTIFIED BY 1;
GRANT CREATE SESSION TO TV16;
/
declare is_role_existed integer;
begin
  SELECT count(*) INTO is_role_existed FROM DBA_ROLES where role='BANTOCHUC';
  if (is_role_existed = 1) then
    execute immediate 'drop role BANTOCHUC';
  end if;
end;
/
declare is_role_existed integer;
begin
  SELECT count(*) INTO is_role_existed FROM DBA_ROLES where role='NGUOIDIBAU';
  if (is_role_existed = 1) then
    execute immediate 'drop role NGUOIDIBAU';
  end if;
end;
/
declare is_role_existed integer;
begin
  SELECT count(*) INTO is_role_existed FROM DBA_ROLES where role='LAPDANHSACHDIBAU';
  if (is_role_existed = 1) then
    execute immediate 'drop role LAPDANHSACHDIBAU';
  end if;
end;
/
declare is_role_existed integer;
begin
  SELECT count(*) INTO is_role_existed FROM DBA_ROLES where role='THEODOIKETQUA';
  if (is_role_existed = 1) then
    execute immediate 'drop role THEODOIKETQUA';
  end if;
end;
/
declare is_role_existed integer;
begin
  SELECT count(*) INTO is_role_existed FROM DBA_ROLES where role='GIAMSAT';
  if (is_role_existed = 1) then
    execute immediate 'drop role GIAMSAT';
  end if;
end;
/
CREATE ROLE BANTOCHUC;
CREATE ROLE NGUOIDIBAU;
CREATE ROLE LAPDANHSACHDIBAU;
CREATE ROLE THEODOIKETQUA;
CREATE ROLE GIAMSAT;